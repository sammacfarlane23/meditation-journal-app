// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`clicking edit date button should show date and time picker 1`] = `
<form
  className="form"
  onSubmit={[Function]}
>
  <input
    className="title"
    onChange={[Function]}
    placeholder="Title (optional)"
    type="text"
    value=""
  />
  <hr
    className="horizontal-line"
  />
  <textarea
    className="text-area"
    onChange={[Function]}
    placeholder="Describe your experience here..."
    rows="10"
    value=""
  />
  <div
    className="date-edit"
  >
    <div
      className="single-date-picker"
    >
      <SingleDatePicker
        anchorDirection="left"
        customCloseIcon={null}
        customInputIcon={null}
        date={"1970-01-01T00:00:00.000Z"}
        daySize={39}
        disabled={false}
        displayFormat="DD/MM/YYYY"
        enableOutsideDays={false}
        firstDayOfWeek={null}
        focused={false}
        hideKeyboardShortcutsPanel={false}
        horizontalMargin={0}
        id="date"
        initialVisibleMonth={null}
        inputIconPosition="before"
        isDayBlocked={[Function]}
        isDayHighlighted={[Function]}
        isOutsideRange={[Function]}
        isRTL={false}
        keepOpenOnDateSelect={false}
        monthFormat="MMMM YYYY"
        navNext={null}
        navPrev={null}
        numberOfMonths={1}
        onClose={[Function]}
        onDateChange={[Function]}
        onFocusChange={[Function]}
        onNextMonthClick={[Function]}
        onPrevMonthClick={[Function]}
        openDirection="down"
        orientation="horizontal"
        phrases={
          Object {
            "calendarLabel": "Calendar",
            "chooseAvailableDate": [Function],
            "clearDate": "Clear Date",
            "closeDatePicker": "Close",
            "dateIsUnavailable": [Function],
            "enterKey": "Enter key",
            "escape": "Escape key",
            "hideKeyboardShortcutsPanel": "Close the shortcuts panel",
            "homeEnd": "Home and end keys",
            "jumpToNextMonth": "Move forward to switch to the next month",
            "jumpToPrevMonth": "Move backward to switch to the previous month",
            "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
            select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
            "keyboardShortcuts": "Keyboard Shortcuts",
            "leftArrowRightArrow": "Right and left arrow keys",
            "moveFocusByOneDay": "Move backward (left) and forward (right) by one day",
            "moveFocusByOneMonth": "Switch months",
            "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week",
            "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week",
            "openThisPanel": "Open this panel",
            "pageUpPageDown": "page up and page down keys",
            "questionMark": "Question mark",
            "returnFocusToInput": "Return to the date input field",
            "selectFocusedDate": "Select the date in focus",
            "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel",
            "upArrowDownArrow": "up and down arrow keys",
          }
        }
        placeholder="Date"
        readOnly={false}
        renderCalendarInfo={null}
        renderDay={null}
        renderMonth={null}
        reopenPickerOnClearDate={false}
        required={false}
        screenReaderInputMessage=""
        showClearDate={false}
        showDefaultInputIcon={false}
        weekDayFormat="dd"
        withFullScreenPortal={false}
        withPortal={true}
      />
    </div>
    <input
      className="input-time"
      max="01:00"
      onChange={[Function]}
      type="time"
      value="01:00"
    />
  </div>
  <div
    className="button-container"
  >
    <div
      className="remove-button-container"
    />
    <div
      className="other-button-container"
    >
      <button
        className="button button--right"
      >
        Save
      </button>
      <button
        className="button button--right button--cancel"
        onClick={[Function]}
        type="button"
      >
        Cancel
      </button>
    </div>
  </div>
</form>
`;

exports[`should render EntryForm correctly 1`] = `
<form
  className="form"
  onSubmit={[Function]}
>
  <input
    className="title"
    onChange={[Function]}
    placeholder="Title (optional)"
    type="text"
    value=""
  />
  <hr
    className="horizontal-line"
  />
  <textarea
    className="text-area"
    onChange={[Function]}
    placeholder="Describe your experience here..."
    rows="10"
    value=""
  />
  <div
    className="createdAt-section"
  >
    <p
      className="createdAt-section__text"
    >
      01 Jan 1970 01:00
    </p>
    <button
      className="edit-button"
      onClick={[Function]}
      type="button"
    >
      <Component />
    </button>
  </div>
  <div
    className="button-container"
  >
    <div
      className="remove-button-container"
    />
    <div
      className="other-button-container"
    >
      <button
        className="button button--right"
      >
        Save
      </button>
      <button
        className="button button--right button--cancel"
        onClick={[Function]}
        type="button"
      >
        Cancel
      </button>
    </div>
  </div>
</form>
`;

exports[`should render EntryForm correctly with entry data and delete button 1`] = `
<form
  className="form"
  onSubmit={[Function]}
>
  <input
    className="title"
    onChange={[Function]}
    placeholder="Title (optional)"
    type="text"
    value=""
  />
  <hr
    className="horizontal-line"
  />
  <textarea
    className="text-area"
    onChange={[Function]}
    placeholder="Describe your experience here..."
    rows="10"
    value="This is third entry"
  />
  <div
    className="createdAt-section"
  >
    <p
      className="createdAt-section__text"
    >
      13 Sep 2020 13:26
    </p>
    <button
      className="edit-button"
      onClick={[Function]}
      type="button"
    >
      <Component />
    </button>
  </div>
  <div
    className="button-container"
  >
    <div
      className="remove-button-container"
    >
      <button
        className="button button--delete"
        onClick={[Function]}
        type="button"
      >
        Delete
      </button>
    </div>
    <div
      className="other-button-container"
    >
      <button
        className="button button--right"
      >
        Save
      </button>
      <button
        className="button button--right button--cancel"
        onClick={[Function]}
        type="button"
      >
        Cancel
      </button>
    </div>
  </div>
</form>
`;

exports[`should render error for invalid form submission 1`] = `
<form
  className="form"
  onSubmit={[Function]}
>
  <input
    className="title"
    onChange={[Function]}
    placeholder="Title (optional)"
    type="text"
    value=""
  />
  <hr
    className="horizontal-line"
  />
  <p
    className="form__error"
  >
    Please add an entry
  </p>
  <textarea
    className="text-area"
    onChange={[Function]}
    placeholder="Describe your experience here..."
    rows="10"
    value=""
  />
  <div
    className="createdAt-section"
  >
    <p
      className="createdAt-section__text"
    >
      01 Jan 1970 01:00
    </p>
    <button
      className="edit-button"
      onClick={[Function]}
      type="button"
    >
      <Component />
    </button>
  </div>
  <div
    className="button-container"
  >
    <div
      className="remove-button-container"
    />
    <div
      className="other-button-container"
    >
      <button
        className="button button--right"
      >
        Save
      </button>
      <button
        className="button button--right button--cancel"
        onClick={[Function]}
        type="button"
      >
        Cancel
      </button>
    </div>
  </div>
</form>
`;
